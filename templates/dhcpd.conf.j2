authoritative;                                       # server is authoritative
use-host-decl-names on;
one-lease-per-client on;

failover peer "{{ failover_peer }}" {               # fail over configuration
         {{ dhcpd_role }};                                   # This is the primary
         address {{ listen_ip }};                   # primarys ip address
         port 647;
         peer address {{ peer_address }};           # peer's ip address
         peer port 647;
         max-response-delay 60;
         max-unacked-updates 10;
         mclt 3600;
{% if dhcpd_role == 'primary' %}
         split 128;
{% endif %}
         load balance max seconds 3;
}

subnet {{ subnet }} netmask {{ netmask }}            # zone to issue addresses from
{
        option domain-name "{{ domain_name }}.";              # the domain name issued
        option domain-name-servers {{ nameservers }};        # name servers issued
        option subnet-mask 255.255.0.0;
        allow unknown-clients;

        pool {
                failover peer "{{ failover_peer }}";           # pool for dhcp leases with failover bootp not allowed 
                deny dynamic bootp clients;         
                range {{ pool_range }};
        }
}

on commit {
        set ClientIP = binary-to-ascii(10, 8, ".", leased-address);
        set ClientMac = binary-to-ascii(16, 8, ":", substring(hardware, 1, 6));
        set ClientHost = pick-first-value( 
		option fqdn.hostname,
		option host-name,
		"none"
	);
        log(concat("Commit: IP: ", ClientIP,  " Hostname: ", ClientHost, " Mac: ", ClientMac));
        execute("/etc/dhcp/add2dns", ClientIP, ClientHost);
}

on expiry {
        set ClientIP = binary-to-ascii(10, 8, ".", leased-address);
        set ClientMac = binary-to-ascii(16, 8, ":", substring(hardware, 1, 6));
        set ClientHost = pick-first-value( 
		option fqdn.hostname,
		option host-name,
		"none"
	);
        log(concat("Commit: IP: ", ClientIP,  " Hostname: ", ClientHost, " Mac: ", ClientMac));
        execute("/etc/dhcp/removefromdns", ClientIP, ClientHost);
}

on release {
        set ClientIP = binary-to-ascii(10, 8, ".", leased-address);
        set ClientMac = binary-to-ascii(16, 8, ":", substring(hardware, 1, 6));
        set ClientHost = pick-first-value( 
		option fqdn.hostname,
		option host-name,
		"none"
	);
        log(concat("Commit: IP: ", ClientIP,  " Hostname: ", ClientHost, " Mac: ", ClientMac));
        execute("/etc/dhcp/removefromdns", ClientIP, ClientHost);
}

